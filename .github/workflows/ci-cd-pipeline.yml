name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on pushes to the main branch

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build and push the backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./todo-backend
          push: true
          tags: waqarullah/todo-backend:latest

      # Build and push the frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./todo-frontend
          push: true
          tags: waqarullah/todo-frontend:latest

      # Run unit tests for the backend
      - name: Run backend unit tests
        run: |
          cd todo-backend
          npm install
          npm test

      # Run unit tests for the frontend
      - name: Run frontend unit tests
        run: |
          cd todo-frontend
          npm install
          npm test

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: build-test-push  # Wait for the build-test-push job to complete

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      # Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      # Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/mongodb-deployment.yaml
          kubectl apply -f k8s/services.yaml